// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="img_filter,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a200tsbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.326000,HLS_SYN_LAT=768975,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=33,HLS_SYN_FF=2165,HLS_SYN_LUT=2673}" *)

module img_filter (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inStream_TDATA,
        inStream_TVALID,
        inStream_TREADY,
        inStream_TLAST,
        outStream_TDATA,
        outStream_TVALID,
        outStream_TREADY,
        outStream_TLAST,
        sel_V
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_pp0_stage1 = 11'd4;
parameter    ap_ST_fsm_pp0_stage2 = 11'd8;
parameter    ap_ST_fsm_state24 = 11'd16;
parameter    ap_ST_fsm_state25 = 11'd32;
parameter    ap_ST_fsm_state26 = 11'd64;
parameter    ap_ST_fsm_state27 = 11'd128;
parameter    ap_ST_fsm_pp1_stage0 = 11'd256;
parameter    ap_ST_fsm_pp1_stage1 = 11'd512;
parameter    ap_ST_fsm_state33 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] inStream_TDATA;
input   inStream_TVALID;
output   inStream_TREADY;
input  [0:0] inStream_TLAST;
output  [7:0] outStream_TDATA;
output   outStream_TVALID;
input   outStream_TREADY;
output  [0:0] outStream_TLAST;
input  [2:0] sel_V;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] inStream_V_data_V_0_data_out;
wire    inStream_V_data_V_0_vld_in;
wire    inStream_V_data_V_0_vld_out;
wire    inStream_V_data_V_0_ack_in;
reg    inStream_V_data_V_0_ack_out;
reg   [7:0] inStream_V_data_V_0_payload_A;
reg   [7:0] inStream_V_data_V_0_payload_B;
reg    inStream_V_data_V_0_sel_rd;
reg    inStream_V_data_V_0_sel_wr;
wire    inStream_V_data_V_0_sel;
wire    inStream_V_data_V_0_load_A;
wire    inStream_V_data_V_0_load_B;
reg   [1:0] inStream_V_data_V_0_state;
wire    inStream_V_data_V_0_state_cmp_full;
wire    inStream_V_last_V_0_vld_in;
reg    inStream_V_last_V_0_ack_out;
reg   [1:0] inStream_V_last_V_0_state;
reg   [7:0] outStream_V_data_V_1_data_in;
reg   [7:0] outStream_V_data_V_1_data_out;
reg    outStream_V_data_V_1_vld_in;
wire    outStream_V_data_V_1_vld_out;
wire    outStream_V_data_V_1_ack_in;
wire    outStream_V_data_V_1_ack_out;
reg   [7:0] outStream_V_data_V_1_payload_A;
reg   [7:0] outStream_V_data_V_1_payload_B;
reg    outStream_V_data_V_1_sel_rd;
reg    outStream_V_data_V_1_sel_wr;
wire    outStream_V_data_V_1_sel;
wire    outStream_V_data_V_1_load_A;
wire    outStream_V_data_V_1_load_B;
reg   [1:0] outStream_V_data_V_1_state;
wire    outStream_V_data_V_1_state_cmp_full;
reg   [0:0] outStream_V_last_V_1_data_in;
reg   [0:0] outStream_V_last_V_1_data_out;
reg    outStream_V_last_V_1_vld_in;
wire    outStream_V_last_V_1_vld_out;
wire    outStream_V_last_V_1_ack_in;
wire    outStream_V_last_V_1_ack_out;
reg   [0:0] outStream_V_last_V_1_payload_A;
reg   [0:0] outStream_V_last_V_1_payload_B;
reg    outStream_V_last_V_1_sel_rd;
reg    outStream_V_last_V_1_sel_wr;
wire    outStream_V_last_V_1_sel;
wire    outStream_V_last_V_1_load_A;
wire    outStream_V_last_V_1_load_B;
reg   [1:0] outStream_V_last_V_1_state;
wire    outStream_V_last_V_1_state_cmp_full;
reg    inStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond1_reg_1452;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_reg_1795;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    outStream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter6;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_21_reg_1456;
reg   [0:0] ap_reg_pp0_iter6_tmp_21_reg_1456;
reg    ap_enable_reg_pp0_iter7;
wire    ap_CS_fsm_state25;
reg   [0:0] tmp_1_reg_1411;
wire   [0:0] exitcond2_fu_1227_p2;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg   [0:0] tmp_9_reg_1448;
reg    ap_enable_reg_pp1_iter2;
reg   [31:0] col_assign_reg_347;
reg   [31:0] idxRow_reg_359;
reg   [31:0] pixConvolved_reg_371;
reg   [18:0] countWait_reg_383;
reg   [18:0] idxPixel1_reg_406;
wire   [7:0] lineBuff_val_2_q0;
reg   [7:0] reg_432;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state17_pp0_stage0_iter5;
wire    ap_block_state20_pp0_stage0_iter6;
wire    ap_block_state23_pp0_stage0_iter7;
reg    ap_block_state23_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter3_exitcond1_reg_1452;
reg   [0:0] or_cond_reg_1550;
reg   [0:0] ap_reg_pp0_iter3_or_cond_reg_1550;
wire   [7:0] lineBuff_val_2_q1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_state18_pp0_stage1_iter5;
wire    ap_block_state21_pp0_stage1_iter6;
reg    ap_block_state21_io;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] ap_reg_pp0_iter4_exitcond1_reg_1452;
reg   [7:0] reg_437;
reg    ap_block_state29_pp1_stage1_iter0;
reg    ap_predicate_op281_write_state29;
reg    ap_block_state29_io;
wire    ap_block_state31_pp1_stage1_iter1;
reg    ap_block_state31_io;
reg    ap_block_pp1_stage1_11001;
wire    ap_block_state28_pp1_stage0_iter0;
reg    ap_block_state30_pp1_stage0_iter1;
reg    ap_block_state30_io;
wire    ap_block_state32_pp1_stage0_iter2;
reg    ap_block_state32_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] tmp_1_fu_574_p3;
wire  signed [15:0] tmp_5_fu_582_p1;
reg  signed [15:0] tmp_5_reg_1415;
wire  signed [15:0] tmp_56_0_1_fu_586_p1;
reg  signed [15:0] tmp_56_0_1_reg_1421;
wire  signed [15:0] tmp_56_1_fu_590_p1;
reg  signed [15:0] tmp_56_1_reg_1426;
wire   [15:0] tmp_56_1_s_fu_594_p1;
reg   [15:0] tmp_56_1_s_reg_1432;
wire  signed [15:0] tmp_56_2_fu_598_p1;
reg  signed [15:0] tmp_56_2_reg_1437;
wire  signed [15:0] tmp_56_2_1_fu_602_p1;
reg  signed [15:0] tmp_56_2_1_reg_1443;
wire   [0:0] tmp_9_fu_606_p2;
wire   [0:0] exitcond1_fu_612_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond1_reg_1452;
reg   [0:0] ap_reg_pp0_iter2_exitcond1_reg_1452;
wire   [0:0] tmp_21_fu_618_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_21_reg_1456;
reg   [0:0] ap_reg_pp0_iter2_tmp_21_reg_1456;
reg   [0:0] ap_reg_pp0_iter3_tmp_21_reg_1456;
reg   [0:0] ap_reg_pp0_iter4_tmp_21_reg_1456;
reg   [0:0] ap_reg_pp0_iter5_tmp_21_reg_1456;
reg   [4:0] p_Result_s_reg_1460;
reg    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_state13_pp0_stage2_iter3;
wire    ap_block_state16_pp0_stage2_iter4;
wire    ap_block_state19_pp0_stage2_iter5;
wire    ap_block_state22_pp0_stage2_iter6;
reg    ap_block_state22_io;
reg    ap_block_pp0_stage2_11001;
wire   [2:0] tmp_4_fu_634_p1;
reg   [2:0] tmp_4_reg_1466;
wire   [18:0] phitmp_fu_638_p2;
reg   [18:0] phitmp_reg_1472;
wire   [14:0] tmp_2_fu_668_p2;
reg   [14:0] tmp_2_reg_1477;
wire   [4:0] tmp_6_fu_674_p1;
reg   [4:0] tmp_6_reg_1482;
wire   [13:0] r_V_1_fu_705_p2;
reg   [13:0] r_V_1_reg_1493;
wire   [13:0] r_V_fu_725_p2;
reg   [13:0] r_V_reg_1498;
wire   [0:0] icmp_fu_754_p2;
reg   [0:0] icmp_reg_1508;
wire   [0:0] tmp_20_fu_760_p2;
reg   [0:0] tmp_20_reg_1513;
reg   [0:0] ap_reg_pp0_iter2_tmp_20_reg_1513;
wire   [31:0] idxRow_1_fu_772_p3;
reg   [31:0] idxRow_1_reg_1519;
reg   [7:0] blue_reg_1529;
reg   [7:0] red_reg_1534;
wire   [63:0] tmp_8_fu_813_p1;
reg   [63:0] tmp_8_reg_1539;
reg   [9:0] lineBuff_val_1_addr_reg_1545;
wire   [0:0] or_cond_fu_834_p2;
reg   [0:0] ap_reg_pp0_iter4_or_cond_reg_1550;
wire   [31:0] idxCol_1_fu_845_p3;
reg   [31:0] idxCol_1_reg_1556;
reg    ap_enable_reg_pp0_iter2;
reg   [7:0] green_reg_1561;
wire   [8:0] tmp1_fu_868_p2;
reg   [8:0] tmp1_reg_1566;
reg   [9:0] lineBuff_val_2_addr_reg_1571;
reg   [7:0] pixelIn_reg_1577;
wire   [63:0] tmp_10_fu_889_p1;
reg   [63:0] tmp_10_reg_1582;
wire   [31:0] pixConvolved_3_fu_894_p2;
reg   [31:0] pixConvolved_3_reg_1593;
wire   [63:0] tmp_52_0_2_fu_906_p1;
reg   [63:0] tmp_52_0_2_reg_1598;
wire   [31:0] pixConvolved_2_fu_918_p3;
reg   [31:0] pixConvolved_2_reg_1609;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] lineBuff_val_0_q0;
reg   [7:0] lineBuff_val_0_load_reg_1614;
wire   [63:0] tmp_52_0_1_fu_925_p1;
reg   [63:0] tmp_52_0_1_reg_1619;
wire   [7:0] lineBuff_val_0_q1;
reg   [7:0] lineBuff_val_0_load_2_reg_1630;
wire   [15:0] window_val_0_1_fu_933_p2;
reg   [15:0] window_val_0_1_reg_1640;
wire   [7:0] lineBuff_val_1_q1;
reg   [7:0] lineBuff_val_1_load_1_reg_1645;
reg   [7:0] lineBuff_val_1_load_2_reg_1665;
wire   [15:0] window_val_1_2_fu_945_p2;
reg   [15:0] window_val_1_2_reg_1670;
wire  signed [15:0] grp_fu_1375_p3;
reg  signed [15:0] tmp5_reg_1685;
wire   [14:0] tmp_16_fu_950_p1;
reg   [14:0] tmp_16_reg_1690;
wire   [15:0] window_val_2_0_fu_968_p2;
reg   [15:0] window_val_2_0_reg_1695;
wire   [15:0] grp_fu_1382_p3;
reg   [15:0] tmp2_reg_1700;
wire   [14:0] tmp_13_fu_977_p1;
reg   [14:0] tmp_13_reg_1705;
wire  signed [15:0] grp_fu_1389_p3;
reg  signed [15:0] tmp6_reg_1710;
wire  signed [15:0] grp_fu_1404_p3;
reg  signed [15:0] tmp9_reg_1715;
wire   [14:0] tmp_15_fu_990_p1;
reg   [14:0] tmp_15_reg_1720;
(* use_dsp48 = "no" *) wire   [15:0] tmp10_fu_993_p2;
reg   [15:0] tmp10_reg_1725;
wire   [14:0] tmp_17_fu_997_p2;
reg   [14:0] tmp_17_reg_1730;
wire   [14:0] valOutput_1_fu_1036_p3;
reg   [14:0] valOutput_1_reg_1735;
wire   [20:0] tmp_41_tr_fu_1057_p2;
reg   [20:0] tmp_41_tr_reg_1741;
reg   [0:0] tmp_42_reg_1746;
wire   [42:0] tmp_41_fu_1080_p1;
reg   [42:0] tmp_41_reg_1752;
reg   [14:0] tmp_44_reg_1757;
wire  signed [20:0] tmp_28_fu_1113_p1;
reg  signed [20:0] tmp_28_reg_1762;
wire   [20:0] neg_ti_fu_1123_p2;
reg   [20:0] neg_ti_reg_1767;
wire   [7:0] dataOutSideChannel_d_fu_1202_p2;
wire   [7:0] dataOutSideChannel_d_1_fu_1221_p2;
reg   [7:0] dataOutSideChannel_d_1_reg_1777;
wire   [9:0] countWait_2_fu_1233_p2;
reg   [9:0] countWait_2_reg_1785;
reg    ap_block_state25;
reg    ap_predicate_op262_write_state25;
reg    ap_block_state25_io;
wire   [0:0] tmp_last_V_fu_1239_p2;
reg   [0:0] tmp_last_V_reg_1790;
wire   [0:0] exitcond_fu_1246_p2;
wire   [18:0] idxPixel_fu_1252_p2;
reg   [18:0] idxPixel_reg_1799;
wire   [4:0] p_3_fu_1310_p3;
reg   [4:0] p_3_reg_1804;
wire   [7:0] dataOutSideChannel_d_2_fu_1346_p3;
wire   [2:0] tmp_40_fu_1355_p1;
reg   [2:0] tmp_40_reg_1814;
wire   [7:0] dataOutSideChannel_d_3_fu_1359_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state28;
reg    ap_block_pp1_stage1_subdone;
reg   [9:0] lineBuff_val_0_address0;
reg    lineBuff_val_0_ce0;
reg   [9:0] lineBuff_val_0_address1;
reg    lineBuff_val_0_ce1;
reg    lineBuff_val_0_we1;
reg   [9:0] lineBuff_val_1_address0;
reg    lineBuff_val_1_ce0;
reg    lineBuff_val_1_we0;
wire   [7:0] lineBuff_val_1_q0;
reg   [9:0] lineBuff_val_1_address1;
reg    lineBuff_val_1_ce1;
reg   [9:0] lineBuff_val_2_address0;
reg    lineBuff_val_2_ce0;
reg    lineBuff_val_2_we0;
reg   [9:0] lineBuff_val_2_address1;
reg    lineBuff_val_2_ce1;
reg   [31:0] ap_phi_mux_col_assign_phi_fu_351_p4;
reg   [31:0] ap_phi_mux_idxRow_phi_fu_363_p4;
reg   [31:0] ap_phi_mux_pixConvolved_phi_fu_375_p4;
reg   [18:0] ap_phi_mux_countWait_phi_fu_387_p4;
reg   [9:0] countWait_1_reg_395;
wire    ap_CS_fsm_state24;
reg   [18:0] ap_phi_mux_idxPixel1_phi_fu_410_p4;
wire    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] kernel_2_fu_464_p10;
wire   [7:0] kernel_1_fu_442_p10;
wire   [7:0] kernel_5_fu_508_p10;
wire   [7:0] kernel_4_fu_486_p10;
wire   [7:0] kernel_8_fu_552_p10;
wire   [7:0] kernel_7_fu_530_p10;
wire   [2:0] grp_fu_422_p4;
wire   [5:0] tmp_7_fu_644_p3;
wire   [13:0] p_shl2_fu_655_p4;
wire   [14:0] p_shl2_cast_cast_fu_664_p1;
wire   [14:0] tmp_1_cast_fu_651_p1;
wire  signed [63:0] tmp_2_cast_fu_678_p1;
wire   [65:0] grp_fu_685_p0;
wire   [63:0] grp_fu_685_p1;
wire   [12:0] p_shl_fu_694_p3;
wire   [13:0] p_shl_cast_cast_fu_701_p1;
wire   [13:0] rhs_V_1_cast_fu_691_p1;
wire   [12:0] p_shl3_fu_714_p3;
wire   [13:0] p_shl3_cast_cast_fu_721_p1;
wire   [13:0] rhs_V_cast_fu_711_p1;
wire  signed [39:0] r_V_1_cast_fu_731_p1;
wire   [41:0] grp_fu_738_p0;
wire   [39:0] grp_fu_738_p1;
wire   [30:0] tmp_11_fu_744_p4;
wire   [31:0] idxRow_2_fu_766_p2;
wire  signed [39:0] r_V_cast_fu_780_p1;
wire   [41:0] grp_fu_787_p0;
wire   [39:0] grp_fu_787_p1;
wire   [80:0] grp_fu_738_p2;
wire   [80:0] grp_fu_787_p2;
wire   [30:0] tmp_12_fu_818_p4;
wire   [0:0] icmp1_fu_828_p2;
wire   [31:0] idxCol_fu_839_p2;
wire   [128:0] grp_fu_685_p2;
wire   [8:0] tmp_5_cast_fu_862_p1;
wire   [8:0] tmp_7_cast_fu_865_p1;
wire   [21:0] grp_fu_1366_p3;
wire   [31:0] col_assign_1_0_2_fu_900_p2;
wire   [31:0] pixConvolved_1_fu_911_p3;
wire   [7:0] window_val_0_1_fu_933_p0;
wire  signed [7:0] window_val_0_1_fu_933_p1;
wire   [7:0] window_val_1_2_fu_945_p0;
wire  signed [7:0] window_val_1_2_fu_945_p1;
wire   [7:0] window_val_0_2_fu_956_p0;
wire  signed [7:0] window_val_0_2_fu_956_p1;
wire   [7:0] window_val_2_0_fu_968_p0;
wire  signed [7:0] window_val_2_0_fu_968_p1;
wire  signed [15:0] grp_fu_1396_p3;
wire   [14:0] tmp_14_fu_987_p1;
(* use_dsp48 = "no" *) wire   [15:0] tmp8_fu_1002_p2;
wire   [14:0] tmp_18_fu_1006_p2;
wire   [15:0] valOutput_fu_1010_p2;
wire   [0:0] tmp_19_fu_1020_p3;
wire   [14:0] valOutput_cast_fu_1015_p2;
wire   [14:0] p_s_fu_1028_p3;
wire   [19:0] tmp_26_fu_1046_p3;
wire   [20:0] tmp_32_cast_fu_1053_p1;
wire   [20:0] tmp_25_fu_1043_p1;
wire  signed [20:0] mul1_fu_1074_p1;
wire   [43:0] mul1_fu_1074_p2;
wire   [42:0] neg_mul_fu_1094_p2;
wire   [13:0] tmp_43_fu_1099_p4;
wire  signed [20:0] tmp_27_fu_1109_p1;
wire   [20:0] tmp_29_fu_1116_p3;
wire   [20:0] tmp_30_fu_1129_p3;
wire   [4:0] tmp_46_fu_1138_p1;
wire   [12:0] tmp_47_fu_1150_p1;
wire   [12:0] p_neg_fu_1162_p2;
wire   [7:0] tmp_34_fu_1168_p4;
wire   [0:0] tmp_48_fu_1154_p3;
wire   [7:0] tmp_35_fu_1178_p2;
wire   [7:0] tmp_36_fu_1184_p4;
wire   [7:0] tmp_37_fu_1194_p3;
wire   [7:0] tmp_33_fu_1142_p3;
wire   [1:0] tmp_49_fu_1209_p1;
wire   [7:0] tmp_38_fu_1213_p3;
wire   [7:0] tmp_45_fu_1134_p1;
wire   [2:0] tmp_22_fu_1258_p1;
wire   [0:0] tmp_32_fu_1282_p3;
wire   [0:0] tmp_31_fu_1274_p3;
wire   [0:0] tmp_21_cast_not_fu_1290_p2;
wire   [0:0] tmp_23_fu_1296_p2;
wire   [5:0] green_V_fu_1262_p3;
wire   [4:0] blue_V_fu_1270_p1;
wire   [5:0] p_Val2_4_fu_1302_p3;
wire   [4:0] tmp_24_fu_1328_p4;
wire   [4:0] tmp_39_fu_1338_p3;
wire   [2:0] r_V_2_fu_1318_p4;
wire   [8:0] grp_fu_1366_p0;
wire   [7:0] grp_fu_1366_p1;
wire   [11:0] grp_fu_1366_p2;
wire   [7:0] grp_fu_1375_p0;
wire  signed [7:0] grp_fu_1375_p1;
wire   [7:0] grp_fu_1382_p0;
wire   [7:0] grp_fu_1382_p1;
wire   [7:0] grp_fu_1389_p0;
wire  signed [7:0] grp_fu_1389_p1;
wire   [15:0] grp_fu_1389_p2;
wire   [7:0] grp_fu_1396_p0;
wire  signed [7:0] grp_fu_1396_p1;
wire   [7:0] grp_fu_1404_p0;
wire  signed [7:0] grp_fu_1404_p1;
reg    grp_fu_685_ce;
reg    grp_fu_738_ce;
reg    grp_fu_787_ce;
reg   [10:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [9:0] grp_fu_1366_p00;
wire   [9:0] grp_fu_1366_p10;
wire   [15:0] grp_fu_1375_p00;
wire   [15:0] grp_fu_1382_p00;
wire   [15:0] grp_fu_1389_p00;
wire   [15:0] grp_fu_1396_p00;
wire   [15:0] grp_fu_1404_p00;
wire   [128:0] grp_fu_685_p10;
wire   [80:0] grp_fu_738_p10;
wire   [80:0] grp_fu_787_p10;
wire   [15:0] window_val_0_1_fu_933_p00;
wire   [15:0] window_val_0_2_fu_956_p00;
wire   [15:0] window_val_1_2_fu_945_p00;
wire   [15:0] window_val_2_0_fu_968_p00;
reg    ap_condition_1771;
reg    ap_condition_1774;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 inStream_V_data_V_0_sel_rd = 1'b0;
#0 inStream_V_data_V_0_sel_wr = 1'b0;
#0 inStream_V_data_V_0_state = 2'd0;
#0 inStream_V_last_V_0_state = 2'd0;
#0 outStream_V_data_V_1_sel_rd = 1'b0;
#0 outStream_V_data_V_1_sel_wr = 1'b0;
#0 outStream_V_data_V_1_state = 2'd0;
#0 outStream_V_last_V_1_sel_rd = 1'b0;
#0 outStream_V_last_V_1_sel_wr = 1'b0;
#0 outStream_V_last_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

img_filter_lineBubkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
lineBuff_val_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_0_address0),
    .ce0(lineBuff_val_0_ce0),
    .q0(lineBuff_val_0_q0),
    .address1(lineBuff_val_0_address1),
    .ce1(lineBuff_val_0_ce1),
    .we1(lineBuff_val_0_we1),
    .d1(lineBuff_val_1_q0),
    .q1(lineBuff_val_0_q1)
);

img_filter_lineBucud #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
lineBuff_val_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_1_address0),
    .ce0(lineBuff_val_1_ce0),
    .we0(lineBuff_val_1_we0),
    .d0(lineBuff_val_2_q1),
    .q0(lineBuff_val_1_q0),
    .address1(lineBuff_val_1_address1),
    .ce1(lineBuff_val_1_ce1),
    .q1(lineBuff_val_1_q1)
);

img_filter_lineBucud #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
lineBuff_val_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lineBuff_val_2_address0),
    .ce0(lineBuff_val_2_ce0),
    .we0(lineBuff_val_2_we0),
    .d0(pixelIn_reg_1577),
    .q0(lineBuff_val_2_q0),
    .address1(lineBuff_val_2_address1),
    .ce1(lineBuff_val_2_ce1),
    .q1(lineBuff_val_2_q1)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U1(
    .din0(8'd0),
    .din1(8'd255),
    .din2(8'd254),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(sel_V),
    .dout(kernel_1_fu_442_p10)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U2(
    .din0(8'd0),
    .din1(8'd255),
    .din2(8'd255),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(sel_V),
    .dout(kernel_2_fu_464_p10)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U3(
    .din0(8'd1),
    .din1(8'd8),
    .din2(8'd0),
    .din3(8'd1),
    .din4(8'd1),
    .din5(8'd1),
    .din6(8'd1),
    .din7(8'd1),
    .din8(sel_V),
    .dout(kernel_4_fu_486_p10)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U4(
    .din0(8'd0),
    .din1(8'd255),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(sel_V),
    .dout(kernel_5_fu_508_p10)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U5(
    .din0(8'd0),
    .din1(8'd255),
    .din2(8'd2),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(sel_V),
    .dout(kernel_7_fu_530_p10)
);

img_filter_mux_83eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
img_filter_mux_83eOg_U6(
    .din0(8'd0),
    .din1(8'd255),
    .din2(8'd1),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(sel_V),
    .dout(kernel_8_fu_552_p10)
);

img_filter_mul_66fYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 66 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 129 ))
img_filter_mul_66fYi_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_685_p0),
    .din1(grp_fu_685_p1),
    .ce(grp_fu_685_ce),
    .dout(grp_fu_685_p2)
);

img_filter_mul_42g8j #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 81 ))
img_filter_mul_42g8j_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_738_p0),
    .din1(grp_fu_738_p1),
    .ce(grp_fu_738_ce),
    .dout(grp_fu_738_p2)
);

img_filter_mul_42g8j #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 81 ))
img_filter_mul_42g8j_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_787_p0),
    .din1(grp_fu_787_p1),
    .ce(grp_fu_787_ce),
    .dout(grp_fu_787_p2)
);

img_filter_am_addhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
img_filter_am_addhbi_U10(
    .din0(grp_fu_1366_p0),
    .din1(grp_fu_1366_p1),
    .din2(grp_fu_1366_p2),
    .dout(grp_fu_1366_p3)
);

img_filter_mac_muibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
img_filter_mac_muibs_U11(
    .din0(grp_fu_1375_p0),
    .din1(grp_fu_1375_p1),
    .din2(window_val_0_1_reg_1640),
    .dout(grp_fu_1375_p3)
);

img_filter_mac_mujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
img_filter_mac_mujbC_U12(
    .din0(grp_fu_1382_p0),
    .din1(grp_fu_1382_p1),
    .din2(window_val_1_2_reg_1670),
    .dout(grp_fu_1382_p3)
);

img_filter_mac_muibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
img_filter_mac_muibs_U13(
    .din0(grp_fu_1389_p0),
    .din1(grp_fu_1389_p1),
    .din2(grp_fu_1389_p2),
    .dout(grp_fu_1389_p3)
);

img_filter_mac_mukbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
img_filter_mac_mukbM_U14(
    .din0(grp_fu_1396_p0),
    .din1(grp_fu_1396_p1),
    .din2(tmp6_reg_1710),
    .dout(grp_fu_1396_p3)
);

img_filter_mac_muibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
img_filter_mac_muibs_U15(
    .din0(grp_fu_1404_p0),
    .din1(grp_fu_1404_p1),
    .din2(window_val_2_0_reg_1695),
    .dout(grp_fu_1404_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_1_fu_574_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state28)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((tmp_1_fu_574_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((inStream_V_data_V_0_ack_out == 1'b1) & (inStream_V_data_V_0_vld_out == 1'b1))) begin
            inStream_V_data_V_0_sel_rd <= ~inStream_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((inStream_V_data_V_0_ack_in == 1'b1) & (inStream_V_data_V_0_vld_in == 1'b1))) begin
            inStream_V_data_V_0_sel_wr <= ~inStream_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_data_V_0_state == 2'd2) & (inStream_V_data_V_0_vld_in == 1'b0)) | ((inStream_V_data_V_0_state == 2'd3) & (inStream_V_data_V_0_vld_in == 1'b0) & (inStream_V_data_V_0_ack_out == 1'b1)))) begin
            inStream_V_data_V_0_state <= 2'd2;
        end else if ((((inStream_V_data_V_0_state == 2'd1) & (inStream_V_data_V_0_ack_out == 1'b0)) | ((inStream_V_data_V_0_state == 2'd3) & (inStream_V_data_V_0_ack_out == 1'b0) & (inStream_V_data_V_0_vld_in == 1'b1)))) begin
            inStream_V_data_V_0_state <= 2'd1;
        end else if (((~((inStream_V_data_V_0_vld_in == 1'b0) & (inStream_V_data_V_0_ack_out == 1'b1)) & ~((inStream_V_data_V_0_ack_out == 1'b0) & (inStream_V_data_V_0_vld_in == 1'b1)) & (inStream_V_data_V_0_state == 2'd3)) | ((inStream_V_data_V_0_state == 2'd1) & (inStream_V_data_V_0_ack_out == 1'b1)) | ((inStream_V_data_V_0_state == 2'd2) & (inStream_V_data_V_0_vld_in == 1'b1)))) begin
            inStream_V_data_V_0_state <= 2'd3;
        end else begin
            inStream_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inStream_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((inStream_V_last_V_0_state == 2'd2) & (inStream_V_last_V_0_vld_in == 1'b0)) | ((inStream_V_last_V_0_state == 2'd3) & (inStream_V_last_V_0_vld_in == 1'b0) & (inStream_V_last_V_0_ack_out == 1'b1)))) begin
            inStream_V_last_V_0_state <= 2'd2;
        end else if ((((inStream_V_last_V_0_state == 2'd1) & (inStream_V_last_V_0_ack_out == 1'b0)) | ((inStream_V_last_V_0_state == 2'd3) & (inStream_V_last_V_0_ack_out == 1'b0) & (inStream_V_last_V_0_vld_in == 1'b1)))) begin
            inStream_V_last_V_0_state <= 2'd1;
        end else if (((~((inStream_V_last_V_0_vld_in == 1'b0) & (inStream_V_last_V_0_ack_out == 1'b1)) & ~((inStream_V_last_V_0_ack_out == 1'b0) & (inStream_V_last_V_0_vld_in == 1'b1)) & (inStream_V_last_V_0_state == 2'd3)) | ((inStream_V_last_V_0_state == 2'd1) & (inStream_V_last_V_0_ack_out == 1'b1)) | ((inStream_V_last_V_0_state == 2'd2) & (inStream_V_last_V_0_vld_in == 1'b1)))) begin
            inStream_V_last_V_0_state <= 2'd3;
        end else begin
            inStream_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_data_V_1_ack_out == 1'b1) & (outStream_V_data_V_1_vld_out == 1'b1))) begin
            outStream_V_data_V_1_sel_rd <= ~outStream_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_data_V_1_ack_in == 1'b1) & (outStream_V_data_V_1_vld_in == 1'b1))) begin
            outStream_V_data_V_1_sel_wr <= ~outStream_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_data_V_1_state == 2'd2) & (outStream_V_data_V_1_vld_in == 1'b0)) | ((outStream_V_data_V_1_state == 2'd3) & (outStream_V_data_V_1_vld_in == 1'b0) & (outStream_V_data_V_1_ack_out == 1'b1)))) begin
            outStream_V_data_V_1_state <= 2'd2;
        end else if ((((outStream_V_data_V_1_state == 2'd1) & (outStream_V_data_V_1_ack_out == 1'b0)) | ((outStream_V_data_V_1_state == 2'd3) & (outStream_V_data_V_1_ack_out == 1'b0) & (outStream_V_data_V_1_vld_in == 1'b1)))) begin
            outStream_V_data_V_1_state <= 2'd1;
        end else if (((~((outStream_V_data_V_1_vld_in == 1'b0) & (outStream_V_data_V_1_ack_out == 1'b1)) & ~((outStream_V_data_V_1_ack_out == 1'b0) & (outStream_V_data_V_1_vld_in == 1'b1)) & (outStream_V_data_V_1_state == 2'd3)) | ((outStream_V_data_V_1_state == 2'd1) & (outStream_V_data_V_1_ack_out == 1'b1)) | ((outStream_V_data_V_1_state == 2'd2) & (outStream_V_data_V_1_vld_in == 1'b1)))) begin
            outStream_V_data_V_1_state <= 2'd3;
        end else begin
            outStream_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_out == 1'b1) & (outStream_V_last_V_1_vld_out == 1'b1))) begin
            outStream_V_last_V_1_sel_rd <= ~outStream_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((outStream_V_last_V_1_ack_in == 1'b1) & (outStream_V_last_V_1_vld_in == 1'b1))) begin
            outStream_V_last_V_1_sel_wr <= ~outStream_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        outStream_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd2;
        end else if ((((outStream_V_last_V_1_state == 2'd1) & (outStream_V_last_V_1_ack_out == 1'b0)) | ((outStream_V_last_V_1_state == 2'd3) & (outStream_V_last_V_1_ack_out == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd1;
        end else if (((~((outStream_V_last_V_1_vld_in == 1'b0) & (outStream_V_last_V_1_ack_out == 1'b1)) & ~((outStream_V_last_V_1_ack_out == 1'b0) & (outStream_V_last_V_1_vld_in == 1'b1)) & (outStream_V_last_V_1_state == 2'd3)) | ((outStream_V_last_V_1_state == 2'd1) & (outStream_V_last_V_1_ack_out == 1'b1)) | ((outStream_V_last_V_1_state == 2'd2) & (outStream_V_last_V_1_vld_in == 1'b1)))) begin
            outStream_V_last_V_1_state <= 2'd3;
        end else begin
            outStream_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_assign_reg_347 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        col_assign_reg_347 <= idxCol_1_reg_1556;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        countWait_1_reg_395 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (outStream_V_data_V_1_ack_in == 1'b1))) begin
        countWait_1_reg_395 <= countWait_2_reg_1785;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        countWait_reg_383 <= 19'd1;
    end else if (((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        countWait_reg_383 <= phitmp_reg_1472;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        idxPixel1_reg_406 <= 19'd0;
    end else if (((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        idxPixel1_reg_406 <= idxPixel_reg_1799;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        idxRow_reg_359 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        idxRow_reg_359 <= idxRow_1_reg_1519;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pixConvolved_reg_371 <= 32'd0;
    end else if (((ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixConvolved_reg_371 <= pixConvolved_2_reg_1609;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if ((1'b1 == ap_condition_1774)) begin
            reg_432 <= lineBuff_val_2_q1;
        end else if ((1'b1 == ap_condition_1771)) begin
            reg_432 <= lineBuff_val_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_exitcond1_reg_1452 <= exitcond1_reg_1452;
        ap_reg_pp0_iter1_tmp_21_reg_1456 <= tmp_21_reg_1456;
        ap_reg_pp0_iter2_exitcond1_reg_1452 <= ap_reg_pp0_iter1_exitcond1_reg_1452;
        ap_reg_pp0_iter2_tmp_21_reg_1456 <= ap_reg_pp0_iter1_tmp_21_reg_1456;
        ap_reg_pp0_iter3_exitcond1_reg_1452 <= ap_reg_pp0_iter2_exitcond1_reg_1452;
        ap_reg_pp0_iter3_tmp_21_reg_1456 <= ap_reg_pp0_iter2_tmp_21_reg_1456;
        ap_reg_pp0_iter4_exitcond1_reg_1452 <= ap_reg_pp0_iter3_exitcond1_reg_1452;
        ap_reg_pp0_iter4_tmp_21_reg_1456 <= ap_reg_pp0_iter3_tmp_21_reg_1456;
        ap_reg_pp0_iter5_tmp_21_reg_1456 <= ap_reg_pp0_iter4_tmp_21_reg_1456;
        ap_reg_pp0_iter6_tmp_21_reg_1456 <= ap_reg_pp0_iter5_tmp_21_reg_1456;
        exitcond1_reg_1452 <= exitcond1_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_reg_pp0_iter2_tmp_20_reg_1513 <= tmp_20_reg_1513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_reg_pp0_iter3_or_cond_reg_1550 <= or_cond_reg_1550;
        ap_reg_pp0_iter4_or_cond_reg_1550 <= ap_reg_pp0_iter3_or_cond_reg_1550;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        blue_reg_1529 <= {{grp_fu_738_p2[52:45]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (tmp_1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        countWait_2_reg_1785 <= countWait_2_fu_1233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dataOutSideChannel_d_1_reg_1777 <= dataOutSideChannel_d_1_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_1795 <= exitcond_fu_1246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        green_reg_1561 <= {{grp_fu_685_p2[77:70]}};
        lineBuff_val_2_addr_reg_1571 <= tmp_8_reg_1539;
        tmp1_reg_1566 <= tmp1_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter1_exitcond1_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_reg_1508 <= icmp_fu_754_p2;
        r_V_reg_1498 <= r_V_fu_725_p2;
        tmp_20_reg_1513 <= tmp_20_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        idxCol_1_reg_1556 <= idxCol_1_fu_845_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        idxPixel_reg_1799 <= idxPixel_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter1_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        idxRow_1_reg_1519 <= idxRow_1_fu_772_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_V_0_load_A == 1'b1)) begin
        inStream_V_data_V_0_payload_A <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((inStream_V_data_V_0_load_B == 1'b1)) begin
        inStream_V_data_V_0_payload_B <= inStream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lineBuff_val_0_load_2_reg_1630 <= lineBuff_val_0_q1;
        lineBuff_val_0_load_reg_1614 <= lineBuff_val_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lineBuff_val_1_addr_reg_1545 <= tmp_8_fu_813_p1;
        or_cond_reg_1550 <= or_cond_fu_834_p2;
        red_reg_1534 <= {{grp_fu_787_p2[52:45]}};
        tmp_8_reg_1539[31 : 0] <= tmp_8_fu_813_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_1_load_1_reg_1645 <= lineBuff_val_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_1_load_2_reg_1665 <= lineBuff_val_1_q1;
        tmp5_reg_1685 <= grp_fu_1375_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_42_reg_1746 == 1'd1) & (ap_reg_pp0_iter5_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        neg_ti_reg_1767 <= neg_ti_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_V_1_load_A == 1'b1)) begin
        outStream_V_data_V_1_payload_A <= outStream_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_data_V_1_load_B == 1'b1)) begin
        outStream_V_data_V_1_payload_B <= outStream_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_A == 1'b1)) begin
        outStream_V_last_V_1_payload_A <= outStream_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((outStream_V_last_V_1_load_B == 1'b1)) begin
        outStream_V_last_V_1_payload_B <= outStream_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_3_reg_1804 <= p_3_fu_1310_p3;
        tmp_40_reg_1814 <= tmp_40_fu_1355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond1_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_Result_s_reg_1460 <= {{inStream_V_data_V_0_data_out[7:3]}};
        tmp_4_reg_1466 <= tmp_4_fu_634_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        phitmp_reg_1472 <= phitmp_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixConvolved_2_reg_1609 <= pixConvolved_2_fu_918_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixConvolved_3_reg_1593 <= pixConvolved_3_fu_894_p2;
        pixelIn_reg_1577 <= {{grp_fu_1366_p3[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        r_V_1_reg_1493 <= r_V_1_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        reg_437 <= inStream_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_or_cond_reg_1550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp10_reg_1725 <= tmp10_fu_993_p2;
        tmp_15_reg_1720 <= tmp_15_fu_990_p1;
        tmp_17_reg_1730 <= tmp_17_fu_997_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp2_reg_1700 <= grp_fu_1382_p3;
        tmp6_reg_1710 <= grp_fu_1389_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_or_cond_reg_1550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp9_reg_1715 <= grp_fu_1404_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_10_reg_1582[31 : 0] <= tmp_10_fu_889_p1[31 : 0];
        tmp_52_0_2_reg_1598[31 : 0] <= tmp_52_0_2_fu_906_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_13_reg_1705 <= tmp_13_fu_977_p1;
        window_val_2_0_reg_1695 <= window_val_2_0_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_16_reg_1690 <= tmp_16_fu_950_p1;
        window_val_1_2_reg_1670 <= window_val_1_2_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_1_reg_1411 <= sel_V[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_612_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_21_reg_1456 <= tmp_21_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_28_reg_1762 <= tmp_28_fu_1113_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_reg_1477 <= tmp_2_fu_668_p2;
        tmp_6_reg_1482 <= tmp_6_fu_674_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_42_reg_1746 == 1'd1) & (ap_reg_pp0_iter5_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_41_reg_1752 <= tmp_41_fu_1080_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_41_tr_reg_1741 <= tmp_41_tr_fu_1057_p2;
        tmp_42_reg_1746 <= tmp_41_tr_fu_1057_p2[32'd20];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_44_reg_1757 <= {{mul1_fu_1074_p2[43:29]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1550 == 1'd1) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_52_0_1_reg_1619[31 : 0] <= tmp_52_0_1_fu_925_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_56_0_1_reg_1421 <= tmp_56_0_1_fu_586_p1;
        tmp_56_1_reg_1426 <= tmp_56_1_fu_590_p1;
        tmp_56_1_s_reg_1432[7 : 0] <= tmp_56_1_s_fu_594_p1[7 : 0];
        tmp_56_2_1_reg_1443 <= tmp_56_2_1_fu_602_p1;
        tmp_56_2_reg_1437 <= tmp_56_2_fu_598_p1;
        tmp_5_reg_1415 <= tmp_5_fu_582_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_1_fu_574_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_9_reg_1448 <= tmp_9_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (ap_predicate_op262_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        tmp_last_V_reg_1790 <= tmp_last_V_fu_1239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valOutput_1_reg_1735 <= valOutput_1_fu_1036_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_reg_1550 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        window_val_0_1_reg_1640 <= window_val_0_1_fu_933_p2;
    end
end

always @ (*) begin
    if ((exitcond1_fu_612_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1246_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (1'b1 == ap_CS_fsm_state25) & ((exitcond2_fu_1227_p2 == 1'd1) | (tmp_1_reg_1411 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_col_assign_phi_fu_351_p4 = idxCol_1_reg_1556;
    end else begin
        ap_phi_mux_col_assign_phi_fu_351_p4 = col_assign_reg_347;
    end
end

always @ (*) begin
    if (((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_countWait_phi_fu_387_p4 = phitmp_reg_1472;
    end else begin
        ap_phi_mux_countWait_phi_fu_387_p4 = countWait_reg_383;
    end
end

always @ (*) begin
    if (((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_idxPixel1_phi_fu_410_p4 = idxPixel_reg_1799;
    end else begin
        ap_phi_mux_idxPixel1_phi_fu_410_p4 = idxPixel1_reg_406;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_idxRow_phi_fu_363_p4 = idxRow_1_reg_1519;
    end else begin
        ap_phi_mux_idxRow_phi_fu_363_p4 = idxRow_reg_359;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_pixConvolved_phi_fu_375_p4 = pixConvolved_2_reg_1609;
    end else begin
        ap_phi_mux_pixConvolved_phi_fu_375_p4 = pixConvolved_reg_371;
    end
end

always @ (*) begin
    if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (1'b1 == ap_CS_fsm_state25) & ((exitcond2_fu_1227_p2 == 1'd1) | (tmp_1_reg_1411 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_685_ce = 1'b1;
    end else begin
        grp_fu_685_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_738_ce = 1'b1;
    end else begin
        grp_fu_738_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_787_ce = 1'b1;
    end else begin
        grp_fu_787_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        inStream_TDATA_blk_n = inStream_V_data_V_0_state[1'd0];
    end else begin
        inStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        inStream_V_data_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((inStream_V_data_V_0_sel == 1'b1)) begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_B;
    end else begin
        inStream_V_data_V_0_data_out = inStream_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        inStream_V_last_V_0_ack_out = 1'b1;
    end else begin
        inStream_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            lineBuff_val_0_address0 = tmp_52_0_1_fu_925_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lineBuff_val_0_address0 = tmp_10_fu_889_p1;
        end else begin
            lineBuff_val_0_address0 = 'bx;
        end
    end else begin
        lineBuff_val_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_0_address1 = tmp_52_0_2_fu_906_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_0_address1 = tmp_8_reg_1539;
    end else begin
        lineBuff_val_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lineBuff_val_0_ce0 = 1'b1;
    end else begin
        lineBuff_val_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lineBuff_val_0_ce1 = 1'b1;
    end else begin
        lineBuff_val_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_0_we1 = 1'b1;
    end else begin
        lineBuff_val_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_1_address0 = tmp_52_0_2_reg_1598;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_1545;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lineBuff_val_1_address0 = tmp_8_fu_813_p1;
    end else begin
        lineBuff_val_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            lineBuff_val_1_address1 = tmp_52_0_1_reg_1619;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            lineBuff_val_1_address1 = tmp_10_reg_1582;
        end else begin
            lineBuff_val_1_address1 = 'bx;
        end
    end else begin
        lineBuff_val_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lineBuff_val_1_ce0 = 1'b1;
    end else begin
        lineBuff_val_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lineBuff_val_1_ce1 = 1'b1;
    end else begin
        lineBuff_val_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter2_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_1_we0 = 1'b1;
    end else begin
        lineBuff_val_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_2_address0 = tmp_10_reg_1582;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_2_address0 = tmp_52_0_2_reg_1598;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_1571;
    end else begin
        lineBuff_val_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lineBuff_val_2_address1 = tmp_52_0_1_reg_1619;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        lineBuff_val_2_address1 = tmp_8_reg_1539;
    end else begin
        lineBuff_val_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lineBuff_val_2_ce0 = 1'b1;
    end else begin
        lineBuff_val_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        lineBuff_val_2_ce1 = 1'b1;
    end else begin
        lineBuff_val_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lineBuff_val_2_we0 = 1'b1;
    end else begin
        lineBuff_val_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | ((exitcond2_fu_1227_p2 == 1'd0) & (tmp_1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_state25)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((tmp_9_reg_1448 == 1'd0) & (exitcond_reg_1795 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        outStream_TDATA_blk_n = outStream_V_data_V_1_state[1'd1];
    end else begin
        outStream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_01001) & (tmp_9_reg_1448 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        outStream_V_data_V_1_data_in = dataOutSideChannel_d_3_fu_1359_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (tmp_9_reg_1448 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        outStream_V_data_V_1_data_in = dataOutSideChannel_d_2_fu_1346_p3;
    end else if ((((1'b0 == ap_block_pp1_stage0_01001) & (tmp_9_reg_1448 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_01001) & (ap_predicate_op281_write_state29 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        outStream_V_data_V_1_data_in = inStream_V_data_V_0_data_out;
    end else if (((1'b1 == ap_CS_fsm_state26) | (~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0)) & (ap_predicate_op262_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        outStream_V_data_V_1_data_in = 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        outStream_V_data_V_1_data_in = dataOutSideChannel_d_1_reg_1777;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        outStream_V_data_V_1_data_in = dataOutSideChannel_d_fu_1202_p2;
    end else begin
        outStream_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((outStream_V_data_V_1_sel == 1'b1)) begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_B;
    end else begin
        outStream_V_data_V_1_data_out = outStream_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state26) & (outStream_V_data_V_1_ack_in == 1'b1)) | (~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (ap_predicate_op262_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_9_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_predicate_op281_write_state29 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        outStream_V_data_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        outStream_V_last_V_1_data_in = tmp_last_V_reg_1790;
    end else if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0)) & (ap_predicate_op262_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        outStream_V_last_V_1_data_in = tmp_last_V_fu_1239_p2;
    end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage0_01001) & (tmp_9_reg_1448 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_01001) & (tmp_9_reg_1448 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_01001) & (tmp_9_reg_1448 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage1_01001) & (ap_predicate_op281_write_state29 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        outStream_V_last_V_1_data_in = 1'd0;
    end else begin
        outStream_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((outStream_V_last_V_1_sel == 1'b1)) begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_B;
    end else begin
        outStream_V_last_V_1_data_out = outStream_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state26) & (outStream_V_data_V_1_ack_in == 1'b1)) | (~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (ap_predicate_op262_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((tmp_9_reg_1448 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((tmp_9_reg_1448 == 1'd1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_predicate_op281_write_state29 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        outStream_V_last_V_1_vld_in = 1'b1;
    end else begin
        outStream_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_1_fu_574_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((tmp_1_fu_574_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_fu_612_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_fu_612_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (1'b1 == ap_CS_fsm_state25) & ((exitcond2_fu_1227_p2 == 1'd1) | (tmp_1_reg_1411 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state25_io)) & (exitcond2_fu_1227_p2 == 1'd0) & (tmp_1_reg_1411 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (outStream_V_data_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (outStream_V_data_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_1246_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_fu_1246_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter6 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state21_io) & (ap_enable_reg_pp0_iter6 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((inStream_V_data_V_0_vld_out == 1'b0) | (1'b1 == ap_block_state30_io))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((inStream_V_data_V_0_vld_out == 1'b0) | (1'b1 == ap_block_state30_io))));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((exitcond_reg_1795 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state29_io) | ((exitcond_reg_1795 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0)))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & ((1'b1 == ap_block_state29_io) | ((exitcond_reg_1795 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0)))));
end

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_io = ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state21_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state22_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_io = ((ap_reg_pp0_iter6_tmp_21_reg_1456 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state23_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25 = ((outStream_V_last_V_1_ack_in == 1'b0) | (outStream_V_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state25_io = ((outStream_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op262_write_state25 == 1'b1));
end

assign ap_block_state28_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_io = ((outStream_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op281_write_state29 == 1'b1));
end

always @ (*) begin
    ap_block_state29_pp1_stage1_iter0 = ((exitcond_reg_1795 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = (((tmp_9_reg_1448 == 1'd0) & (outStream_V_data_V_1_ack_in == 1'b0)) | ((tmp_9_reg_1448 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_state30_pp1_stage0_iter1 = (inStream_V_data_V_0_vld_out == 1'b0);
end

always @ (*) begin
    ap_block_state31_io = (((tmp_9_reg_1448 == 1'd0) & (outStream_V_data_V_1_ack_in == 1'b0)) | ((tmp_9_reg_1448 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0)));
end

assign ap_block_state31_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_io = ((tmp_9_reg_1448 == 1'd1) & (outStream_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state32_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((exitcond1_reg_1452 == 1'd0) & (inStream_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1771 = ((ap_reg_pp0_iter3_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1774 = ((ap_reg_pp0_iter4_exitcond1_reg_1452 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op262_write_state25 = ((exitcond2_fu_1227_p2 == 1'd0) & (tmp_1_reg_1411 == 1'd0));
end

always @ (*) begin
    ap_predicate_op281_write_state29 = ((tmp_9_reg_1448 == 1'd0) & (exitcond_reg_1795 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign blue_V_fu_1270_p1 = inStream_V_data_V_0_data_out[4:0];

assign col_assign_1_0_2_fu_900_p2 = (32'd2 + ap_phi_mux_pixConvolved_phi_fu_375_p4);

assign countWait_2_fu_1233_p2 = (countWait_1_reg_395 + 10'd1);

assign dataOutSideChannel_d_1_fu_1221_p2 = (tmp_38_fu_1213_p3 + tmp_45_fu_1134_p1);

assign dataOutSideChannel_d_2_fu_1346_p3 = {{tmp_39_fu_1338_p3}, {r_V_2_fu_1318_p4}};

assign dataOutSideChannel_d_3_fu_1359_p3 = {{tmp_40_reg_1814}, {p_3_reg_1804}};

assign dataOutSideChannel_d_fu_1202_p2 = (tmp_37_fu_1194_p3 + tmp_33_fu_1142_p3);

assign exitcond1_fu_612_p2 = ((ap_phi_mux_countWait_phi_fu_387_p4 == 19'd307201) ? 1'b1 : 1'b0);

assign exitcond2_fu_1227_p2 = ((countWait_1_reg_395 == 10'd641) ? 1'b1 : 1'b0);

assign exitcond_fu_1246_p2 = ((ap_phi_mux_idxPixel1_phi_fu_410_p4 == 19'd307200) ? 1'b1 : 1'b0);

assign green_V_fu_1262_p3 = {{tmp_22_fu_1258_p1}, {grp_fu_422_p4}};

assign grp_fu_1366_p0 = grp_fu_1366_p00;

assign grp_fu_1366_p00 = tmp1_reg_1566;

assign grp_fu_1366_p1 = grp_fu_1366_p10;

assign grp_fu_1366_p10 = green_reg_1561;

assign grp_fu_1366_p2 = 22'd1366;

assign grp_fu_1375_p0 = grp_fu_1375_p00;

assign grp_fu_1375_p00 = lineBuff_val_0_load_reg_1614;

assign grp_fu_1375_p1 = tmp_5_reg_1415;

assign grp_fu_1382_p0 = grp_fu_1382_p00;

assign grp_fu_1382_p00 = lineBuff_val_1_load_2_reg_1665;

assign grp_fu_1382_p1 = tmp_56_1_s_reg_1432;

assign grp_fu_1389_p0 = grp_fu_1389_p00;

assign grp_fu_1389_p00 = reg_432;

assign grp_fu_1389_p1 = tmp_56_2_reg_1437;

assign grp_fu_1389_p2 = ($signed({{1'b0}, {window_val_0_2_fu_956_p0}}) * $signed(window_val_0_2_fu_956_p1));

assign grp_fu_1396_p0 = grp_fu_1396_p00;

assign grp_fu_1396_p00 = lineBuff_val_1_load_1_reg_1645;

assign grp_fu_1396_p1 = tmp_56_1_reg_1426;

assign grp_fu_1404_p0 = grp_fu_1404_p00;

assign grp_fu_1404_p00 = reg_432;

assign grp_fu_1404_p1 = tmp_56_2_1_reg_1443;

assign grp_fu_422_p4 = {{inStream_V_data_V_0_data_out[7:5]}};

assign grp_fu_685_p0 = 129'd18739549535197004817;

assign grp_fu_685_p1 = grp_fu_685_p10;

assign grp_fu_685_p10 = $unsigned(tmp_2_cast_fu_678_p1);

assign grp_fu_738_p0 = 81'd1134979744802;

assign grp_fu_738_p1 = grp_fu_738_p10;

assign grp_fu_738_p10 = $unsigned(r_V_1_cast_fu_731_p1);

assign grp_fu_787_p0 = 81'd1134979744802;

assign grp_fu_787_p1 = grp_fu_787_p10;

assign grp_fu_787_p10 = $unsigned(r_V_cast_fu_780_p1);

assign icmp1_fu_828_p2 = (($signed(tmp_12_fu_818_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_754_p2 = (($signed(tmp_11_fu_744_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign idxCol_1_fu_845_p3 = ((tmp_20_reg_1513[0:0] === 1'b1) ? idxCol_fu_839_p2 : 32'd0);

assign idxCol_fu_839_p2 = (32'd1 + col_assign_reg_347);

assign idxPixel_fu_1252_p2 = (ap_phi_mux_idxPixel1_phi_fu_410_p4 + 19'd1);

assign idxRow_1_fu_772_p3 = ((tmp_20_fu_760_p2[0:0] === 1'b1) ? ap_phi_mux_idxRow_phi_fu_363_p4 : idxRow_2_fu_766_p2);

assign idxRow_2_fu_766_p2 = (32'd1 + ap_phi_mux_idxRow_phi_fu_363_p4);

assign inStream_TREADY = inStream_V_last_V_0_state[1'd1];

assign inStream_V_data_V_0_ack_in = inStream_V_data_V_0_state[1'd1];

assign inStream_V_data_V_0_load_A = (inStream_V_data_V_0_state_cmp_full & ~inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_load_B = (inStream_V_data_V_0_state_cmp_full & inStream_V_data_V_0_sel_wr);

assign inStream_V_data_V_0_sel = inStream_V_data_V_0_sel_rd;

assign inStream_V_data_V_0_state_cmp_full = ((inStream_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign inStream_V_data_V_0_vld_in = inStream_TVALID;

assign inStream_V_data_V_0_vld_out = inStream_V_data_V_0_state[1'd0];

assign inStream_V_last_V_0_vld_in = inStream_TVALID;

assign mul1_fu_1074_p1 = tmp_41_tr_reg_1741;

assign mul1_fu_1074_p2 = ($signed({{1'b0}, {44'd2105377}}) * $signed(mul1_fu_1074_p1));

assign neg_mul_fu_1094_p2 = (43'd0 - tmp_41_reg_1752);

assign neg_ti_fu_1123_p2 = (21'd0 - tmp_29_fu_1116_p3);

assign or_cond_fu_834_p2 = (icmp_reg_1508 & icmp1_fu_828_p2);

assign outStream_TDATA = outStream_V_data_V_1_data_out;

assign outStream_TLAST = outStream_V_last_V_1_data_out;

assign outStream_TVALID = outStream_V_last_V_1_state[1'd0];

assign outStream_V_data_V_1_ack_in = outStream_V_data_V_1_state[1'd1];

assign outStream_V_data_V_1_ack_out = outStream_TREADY;

assign outStream_V_data_V_1_load_A = (outStream_V_data_V_1_state_cmp_full & ~outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_load_B = (outStream_V_data_V_1_state_cmp_full & outStream_V_data_V_1_sel_wr);

assign outStream_V_data_V_1_sel = outStream_V_data_V_1_sel_rd;

assign outStream_V_data_V_1_state_cmp_full = ((outStream_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_data_V_1_vld_out = outStream_V_data_V_1_state[1'd0];

assign outStream_V_last_V_1_ack_in = outStream_V_last_V_1_state[1'd1];

assign outStream_V_last_V_1_ack_out = outStream_TREADY;

assign outStream_V_last_V_1_load_A = (outStream_V_last_V_1_state_cmp_full & ~outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_load_B = (outStream_V_last_V_1_state_cmp_full & outStream_V_last_V_1_sel_wr);

assign outStream_V_last_V_1_sel = outStream_V_last_V_1_sel_rd;

assign outStream_V_last_V_1_state_cmp_full = ((outStream_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign outStream_V_last_V_1_vld_out = outStream_V_last_V_1_state[1'd0];

assign p_3_fu_1310_p3 = ((tmp_23_fu_1296_p2[0:0] === 1'b1) ? 5'd0 : blue_V_fu_1270_p1);

assign p_Val2_4_fu_1302_p3 = ((tmp_23_fu_1296_p2[0:0] === 1'b1) ? 6'd0 : green_V_fu_1262_p3);

assign p_neg_fu_1162_p2 = (13'd0 - tmp_47_fu_1150_p1);

assign p_s_fu_1028_p3 = ((tmp_19_fu_1020_p3[0:0] === 1'b1) ? 15'd0 : valOutput_cast_fu_1015_p2);

assign p_shl2_cast_cast_fu_664_p1 = p_shl2_fu_655_p4;

assign p_shl2_fu_655_p4 = {{{tmp_4_reg_1466}, {grp_fu_422_p4}}, {8'd0}};

assign p_shl3_cast_cast_fu_721_p1 = p_shl3_fu_714_p3;

assign p_shl3_fu_714_p3 = {{p_Result_s_reg_1460}, {8'd0}};

assign p_shl_cast_cast_fu_701_p1 = p_shl_fu_694_p3;

assign p_shl_fu_694_p3 = {{tmp_6_reg_1482}, {8'd0}};

assign phitmp_fu_638_p2 = (countWait_reg_383 + 19'd1);

assign pixConvolved_1_fu_911_p3 = ((or_cond_reg_1550[0:0] === 1'b1) ? pixConvolved_3_fu_894_p2 : ap_phi_mux_pixConvolved_phi_fu_375_p4);

assign pixConvolved_2_fu_918_p3 = ((ap_reg_pp0_iter2_tmp_20_reg_1513[0:0] === 1'b1) ? pixConvolved_1_fu_911_p3 : 32'd0);

assign pixConvolved_3_fu_894_p2 = (32'd1 + ap_phi_mux_pixConvolved_phi_fu_375_p4);

assign r_V_1_cast_fu_731_p1 = $signed(r_V_1_reg_1493);

assign r_V_1_fu_705_p2 = (p_shl_cast_cast_fu_701_p1 - rhs_V_1_cast_fu_691_p1);

assign r_V_2_fu_1318_p4 = {{p_Val2_4_fu_1302_p3[5:3]}};

assign r_V_cast_fu_780_p1 = $signed(r_V_reg_1498);

assign r_V_fu_725_p2 = (p_shl3_cast_cast_fu_721_p1 - rhs_V_cast_fu_711_p1);

assign rhs_V_1_cast_fu_691_p1 = tmp_6_reg_1482;

assign rhs_V_cast_fu_711_p1 = p_Result_s_reg_1460;

assign tmp10_fu_993_p2 = ($signed(grp_fu_1396_p3) + $signed(tmp5_reg_1685));

assign tmp1_fu_868_p2 = (tmp_5_cast_fu_862_p1 + tmp_7_cast_fu_865_p1);

assign tmp8_fu_1002_p2 = ($signed(tmp2_reg_1700) + $signed(tmp9_reg_1715));

assign tmp_10_fu_889_p1 = ap_phi_mux_pixConvolved_phi_fu_375_p4;

assign tmp_11_fu_744_p4 = {{ap_phi_mux_idxRow_phi_fu_363_p4[31:1]}};

assign tmp_12_fu_818_p4 = {{col_assign_reg_347[31:1]}};

assign tmp_13_fu_977_p1 = grp_fu_1382_p3[14:0];

assign tmp_14_fu_987_p1 = grp_fu_1404_p3[14:0];

assign tmp_15_fu_990_p1 = grp_fu_1396_p3[14:0];

assign tmp_16_fu_950_p1 = grp_fu_1375_p3[14:0];

assign tmp_17_fu_997_p2 = (tmp_14_fu_987_p1 + tmp_13_reg_1705);

assign tmp_18_fu_1006_p2 = (tmp_16_reg_1690 + tmp_15_reg_1720);

assign tmp_19_fu_1020_p3 = valOutput_fu_1010_p2[32'd15];

assign tmp_1_cast_fu_651_p1 = tmp_7_fu_644_p3;

assign tmp_1_fu_574_p3 = sel_V[32'd2];

assign tmp_20_fu_760_p2 = (($signed(ap_phi_mux_col_assign_phi_fu_351_p4) < $signed(32'd639)) ? 1'b1 : 1'b0);

assign tmp_21_cast_not_fu_1290_p2 = (tmp_32_fu_1282_p3 ^ 1'd1);

assign tmp_21_fu_618_p2 = ((ap_phi_mux_countWait_phi_fu_387_p4 > 19'd641) ? 1'b1 : 1'b0);

assign tmp_22_fu_1258_p1 = reg_437[2:0];

assign tmp_23_fu_1296_p2 = (tmp_31_fu_1274_p3 | tmp_21_cast_not_fu_1290_p2);

assign tmp_24_fu_1328_p4 = {{reg_437[7:3]}};

assign tmp_25_fu_1043_p1 = valOutput_1_reg_1735;

assign tmp_26_fu_1046_p3 = {{valOutput_1_reg_1735}, {5'd0}};

assign tmp_27_fu_1109_p1 = $signed(tmp_43_fu_1099_p4);

assign tmp_28_fu_1113_p1 = $signed(tmp_44_reg_1757);

assign tmp_29_fu_1116_p3 = ((tmp_42_reg_1746[0:0] === 1'b1) ? tmp_27_fu_1109_p1 : tmp_28_fu_1113_p1);

assign tmp_2_cast_fu_678_p1 = $signed(tmp_2_reg_1477);

assign tmp_2_fu_668_p2 = (p_shl2_cast_cast_fu_664_p1 - tmp_1_cast_fu_651_p1);

assign tmp_30_fu_1129_p3 = ((tmp_42_reg_1746[0:0] === 1'b1) ? neg_ti_reg_1767 : tmp_28_reg_1762);

assign tmp_31_fu_1274_p3 = reg_437[32'd2];

assign tmp_32_cast_fu_1053_p1 = tmp_26_fu_1046_p3;

assign tmp_32_fu_1282_p3 = inStream_V_data_V_0_data_out[32'd4];

assign tmp_33_fu_1142_p3 = {{tmp_46_fu_1138_p1}, {3'd0}};

assign tmp_34_fu_1168_p4 = {{p_neg_fu_1162_p2[9:2]}};

assign tmp_35_fu_1178_p2 = (8'd0 - tmp_34_fu_1168_p4);

assign tmp_36_fu_1184_p4 = {{tmp_30_fu_1129_p3[9:2]}};

assign tmp_37_fu_1194_p3 = ((tmp_48_fu_1154_p3[0:0] === 1'b1) ? tmp_35_fu_1178_p2 : tmp_36_fu_1184_p4);

assign tmp_38_fu_1213_p3 = {{tmp_49_fu_1209_p1}, {6'd0}};

assign tmp_39_fu_1338_p3 = ((tmp_23_fu_1296_p2[0:0] === 1'b1) ? 5'd0 : tmp_24_fu_1328_p4);

assign tmp_40_fu_1355_p1 = p_Val2_4_fu_1302_p3[2:0];

assign tmp_41_fu_1080_p1 = mul1_fu_1074_p2[42:0];

assign tmp_41_tr_fu_1057_p2 = (tmp_32_cast_fu_1053_p1 - tmp_25_fu_1043_p1);

assign tmp_43_fu_1099_p4 = {{neg_mul_fu_1094_p2[42:29]}};

assign tmp_45_fu_1134_p1 = tmp_30_fu_1129_p3[7:0];

assign tmp_46_fu_1138_p1 = tmp_30_fu_1129_p3[4:0];

assign tmp_47_fu_1150_p1 = tmp_30_fu_1129_p3[12:0];

assign tmp_48_fu_1154_p3 = tmp_30_fu_1129_p3[32'd12];

assign tmp_49_fu_1209_p1 = tmp_30_fu_1129_p3[1:0];

assign tmp_4_fu_634_p1 = inStream_V_data_V_0_data_out[2:0];

assign tmp_52_0_1_fu_925_p1 = pixConvolved_3_reg_1593;

assign tmp_52_0_2_fu_906_p1 = col_assign_1_0_2_fu_900_p2;

assign tmp_56_0_1_fu_586_p1 = $signed(kernel_1_fu_442_p10);

assign tmp_56_1_fu_590_p1 = $signed(kernel_5_fu_508_p10);

assign tmp_56_1_s_fu_594_p1 = kernel_4_fu_486_p10;

assign tmp_56_2_1_fu_602_p1 = $signed(kernel_7_fu_530_p10);

assign tmp_56_2_fu_598_p1 = $signed(kernel_8_fu_552_p10);

assign tmp_5_cast_fu_862_p1 = red_reg_1534;

assign tmp_5_fu_582_p1 = $signed(kernel_2_fu_464_p10);

assign tmp_6_fu_674_p1 = inStream_V_data_V_0_data_out[4:0];

assign tmp_7_cast_fu_865_p1 = blue_reg_1529;

assign tmp_7_fu_644_p3 = {{tmp_4_reg_1466}, {grp_fu_422_p4}};

assign tmp_8_fu_813_p1 = col_assign_reg_347;

assign tmp_9_fu_606_p2 = ((sel_V == 3'd5) ? 1'b1 : 1'b0);

assign tmp_last_V_fu_1239_p2 = ((countWait_1_reg_395 > 10'd639) ? 1'b1 : 1'b0);

assign valOutput_1_fu_1036_p3 = ((ap_reg_pp0_iter4_or_cond_reg_1550[0:0] === 1'b1) ? p_s_fu_1028_p3 : 15'd0);

assign valOutput_cast_fu_1015_p2 = (tmp_17_reg_1730 + tmp_18_fu_1006_p2);

assign valOutput_fu_1010_p2 = (tmp10_reg_1725 + tmp8_fu_1002_p2);

assign window_val_0_1_fu_933_p0 = window_val_0_1_fu_933_p00;

assign window_val_0_1_fu_933_p00 = lineBuff_val_0_q0;

assign window_val_0_1_fu_933_p1 = tmp_56_0_1_reg_1421;

assign window_val_0_1_fu_933_p2 = ($signed({{1'b0}, {window_val_0_1_fu_933_p0}}) * $signed(window_val_0_1_fu_933_p1));

assign window_val_0_2_fu_956_p0 = window_val_0_2_fu_956_p00;

assign window_val_0_2_fu_956_p00 = lineBuff_val_0_load_2_reg_1630;

assign window_val_0_2_fu_956_p1 = tmp_5_reg_1415;

assign window_val_1_2_fu_945_p0 = window_val_1_2_fu_945_p00;

assign window_val_1_2_fu_945_p00 = lineBuff_val_1_q0;

assign window_val_1_2_fu_945_p1 = tmp_56_1_reg_1426;

assign window_val_1_2_fu_945_p2 = ($signed({{1'b0}, {window_val_1_2_fu_945_p0}}) * $signed(window_val_1_2_fu_945_p1));

assign window_val_2_0_fu_968_p0 = window_val_2_0_fu_968_p00;

assign window_val_2_0_fu_968_p00 = lineBuff_val_2_q0;

assign window_val_2_0_fu_968_p1 = tmp_56_2_reg_1437;

assign window_val_2_0_fu_968_p2 = ($signed({{1'b0}, {window_val_2_0_fu_968_p0}}) * $signed(window_val_2_0_fu_968_p1));

always @ (posedge ap_clk) begin
    tmp_56_1_s_reg_1432[15:8] <= 8'b00000000;
    tmp_8_reg_1539[63:32] <= 32'b00000000000000000000000000000000;
    tmp_10_reg_1582[63:32] <= 32'b00000000000000000000000000000000;
    tmp_52_0_2_reg_1598[63:32] <= 32'b00000000000000000000000000000000;
    tmp_52_0_1_reg_1619[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //img_filter
